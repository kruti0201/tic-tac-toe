{"version":3,"sources":["components/square.js","components/board.js","components/game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","React","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","winner","lines","length","a","b","c","calculateWinner","xo","historyPoint","slice","reactDom","render","document","getElementById"],"mappings":"8MAWeA,EATA,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACdC,EAAQF,EAAK,iBAAaA,GAAb,SACnB,OACA,wBAAQG,UAAWD,EAAOD,QAASA,EAAnC,SACKD,KCSMI,EAZD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASJ,EAAc,EAAdA,QACtB,OAAO,qBAAKE,UAAU,QAAf,SACFE,GAAWA,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACpB,cAAC,EAAD,CAEIR,MAAOO,EACPN,QAAS,kBAAMA,EAAQO,KAFlBA,S,WCkCNC,EAnCF,WACT,MAA8BC,IAAMC,SAASC,MAAM,GAAGC,KAAK,OAA3D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCL,IAAMC,SAAS,GAAnD,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BP,IAAMC,UAAS,GAA7C,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECVH,SAAyBf,GAW5B,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CACrC,kBAAkBa,EAAMb,GAAxB,GAAOe,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KDPQG,CAAgBZ,GACzBa,EAAKT,EAAU,IAAM,IAkB3B,OACI,eAAC,WAAD,WACI,6CACA,cAAC,EAAD,CAAOb,QAASS,EAASb,QAdf,SAACO,GACf,IAAMoB,EAAed,EAAQe,MAAM,EAAEb,EAAa,GAClD,IAAGI,IAAUQ,EAAapB,GAA1B,CAEA,IAAMD,EAASO,EACfP,EAAOC,GAAKmB,EACZZ,EAAW,YAAIR,IACfU,EAAcW,EAAaN,QAC3BH,GAAYD,OAOR,sBAAKf,UAAU,eAAf,UACI,6BAAKiB,EAAS,aAAcA,EAAS,gBAAgBO,IACrD,wBAAQ1B,QAtBR,WACRc,EAAWH,MAAM,GAAGC,KAAK,OACzBI,EAAc,GACdE,GAAW,IAmBH,0BE9BhBW,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7a47c4a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Square = ({value, onClick}) => {\r\n    const style = value ? `square ${value}` : `square`\r\n    return(\r\n    <button className={style} onClick={onClick} >\r\n        {value}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './square';\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n    return <div className='board'>\r\n        {squares && squares.map((square, i) => (\r\n            <Square\r\n                key={i}\r\n                value={square}\r\n                onClick={() => onClick(i)}\r\n            />\r\n        ))}\r\n    </div>;\r\n};\r\n\r\nexport default Board;","import React from \"react\";\r\nimport Board from \"./board\";\r\nimport Square from \"./square\";\r\nimport {calculateWinner} from '../helper'\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = React.useState(Array(9).fill(null))\r\n    const [stepNumber, setStepNumber] = React.useState(0)\r\n    const [xIsNext, setXIsNext] = React.useState(true)\r\n    const winner = calculateWinner(history)\r\n    const xo = xIsNext ? \"X\" : \"O\"\r\n\r\n    const reset=()=>{\r\n        setHistory(Array(9).fill(null))\r\n        setStepNumber(0)\r\n        setXIsNext(true)\r\n    }\r\n    const handleClick=(i)=>{\r\n        const historyPoint = history.slice(0,stepNumber + 1)        \r\n        if(winner || historyPoint[i])\r\n            return;        \r\n        const square = history\r\n        square[i] = xo\r\n        setHistory([...square]);\r\n        setStepNumber(historyPoint.length)\r\n        setXIsNext(!xIsNext)\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1>Tic-Tac-Toe</h1>\r\n            <Board squares={history} onClick={handleClick}/>\r\n            <div className=\"info-wrapper\">\r\n                <h3>{winner ? \"Winner is \"+ winner : \"Next move is \"+xo}</h3>\r\n                <button onClick={reset}>Reset</button>\r\n            </div>            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/game\";\n\nreactDom.render(<Game/>,document.getElementById(\"root\"));"],"sourceRoot":""}